name: Database Migration with Flyway

on:
  push:
    branches:
      - main
    paths:
      - 'database/migrations/**'
  
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  migrate-database:
    name: Run Flyway Migration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Assume the deploy pipeline user role
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Copy SSH key and set permissions
        run: |
          aws s3 cp s3://sec-migration-s3-bucket/secuiritybastion.pem .
          mv secuiritybastion.pem ssh_key.pem
          chmod 600 ssh_key.pem

      - name: Configure SSH tunnel through Bastion host
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.BASTION_HOST }} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ssh_key.pem
          ssh -fN -L 127.0.0.1:${{ secrets.DB_PORT }}:${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }} \
            ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }} &

      - name: Wait for tunnel to be ready
        run: |
          for i in {1..10}; do
            nc -z localhost ${{ secrets.DB_PORT }} && echo "Tunnel is ready" && break
            echo "Waiting for tunnel..."
            sleep 3
          done

      - name: Generate Flyway config file
        run: |
          cat > flyway.generated.conf <<EOF
          flyway.url=jdbc:postgresql://localhost:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
          flyway.user=${{ secrets.DB_USER }}
          flyway.password=${{ secrets.DB_PASSWORD }}
          EOF
          cat database/flyway.conf >> flyway.generated.conf

      - name: Show Flyway config (safe version)
        run: |
          cat flyway.generated.conf | sed 's/flyway.password=.*/flyway.password=****/'

      - name: Install Flyway
        run: sudo snap install flyway

      - name: Run Flyway Migration
        run: |
          flyway -X migrate -configFiles=flyway.generated.conf
